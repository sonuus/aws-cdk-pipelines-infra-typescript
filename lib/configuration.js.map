{"version":3,"file":"configuration.js","sourceRoot":"","sources":["configuration.ts"],"names":[],"mappings":"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","sourcesContent":["// # Environments (targeted at accounts)\nexport const DEPLOYMENT = 'Deployment'\nexport const DEV = 'Dev'\nexport const TEST = 'Test'\nexport const PROD = 'Prod'\n\n// # The following export  constants are used to map to parameter/secret paths\nexport const ENVIRONMENT = 'environment'\n\n// # Manual Inputs\nexport const GITHUB_REPOSITORY_OWNER_NAME = 'github_repository_owner_name'\nexport const GITHUB_REPOSITORY_NAME = 'github_repository_name'\nexport const ACCOUNT_ID = 'account_id'\nexport const REGION = 'region'\nexport const LOGICAL_ID_PREFIX = 'logical_id_prefix'\nexport const RESOURCE_NAME_PREFIX = 'resource_name_prefix'\nexport const VPC_CIDR = 'vpc_cidr'\n\n// # Secrets Manager Inputs\nexport const GITHUB_TOKEN = 'github_token'\n\n// # Used in Automated Outputs\nexport const VPC_ID = 'vpc_id'\nexport const AVAILABILITY_ZONE_1 = 'availability_zone_1'\nexport const AVAILABILITY_ZONE_2 = 'availability_zone_2'\nexport const AVAILABILITY_ZONE_3 = 'availability_zone_3'\nexport const SUBNET_ID_1 = 'subnet_id_1'\nexport const SUBNET_ID_2 = 'subnet_id_2'\nexport const SUBNET_ID_3 = 'subnet_id_3'\nexport const ROUTE_TABLE_1 = 'route_table_1'\nexport const ROUTE_TABLE_2 = 'route_table_2'\nexport const ROUTE_TABLE_3 = 'route_table_3'\nexport const SHARED_SECURITY_GROUP_ID = 'shared_security_group_id'\nexport const S3_KMS_KEY = 's3_kms_key'\nexport const S3_ACCESS_LOG_BUCKET = 's3_access_log_bucket'\nexport const S3_RAW_BUCKET = 's3_raw_bucket'\nexport const S3_CONFORMED_BUCKET = 's3_conformed_bucket'\nexport const S3_PURPOSE_BUILT_BUCKET = 's3_purpose_built_bucket'\nexport const CROSS_ACCOUNT_DYNAMODB_ROLE = 'cross_account_dynamodb_role'\n\nexport const GLUE_CONNECTION_AVAILABILITY_ZONE = 'glue_connection_availability_zone'\nexport const GLUE_CONNECTION_SUBNET = 'glue_connection_subnet'\n\nexport function get_local_configuration(environment: String): any {\n    const local_mapping = {\n        DEPLOYMENT: {\n            ACCOUNT_ID: '969171869770',\n            REGION: 'us-east-1',\n            GITHUB_REPOSITORY_OWNER_NAME: 'sonuus',\n            GITHUB_REPOSITORY_NAME: 'aws-cdk-pipelines-datalake-etl',\n            LOGICAL_ID_PREFIX: 'DataLakeCDKBlog',\n            RESOURCE_NAME_PREFIX: 'abc',\n        },\n        DEV: {\n            ACCOUNT_ID: '969171869770',\n            REGION: 'us-east-1',\n            VPC_CIDR: '10.20.0.0/24',\n        },\n        TEST: {\n            ACCOUNT_ID: '969171869770',\n            REGION: 'us-east-2',\n            VPC_CIDR: '10.10.0.0/24',\n        },\n        PROD: {\n            ACCOUNT_ID: '969171869770',\n            REGION: 'us-east-2',\n            VPC_CIDR: '10.0.0.0/24',\n        },\n    }\n\n    switch (environment) {\n        case 'DEV':\n            return local_mapping.DEV\n        case 'TEST':\n            return local_mapping.TEST\n    }\n}\n\nexport function get_environment_configuration(environment: String): any {\n    const cloudformation_output_mapping = {\n        ENVIRONMENT: environment,\n        VPC_ID: `${environment}VpcId`,\n        AVAILABILITY_ZONE_1: `${environment}AvailabilityZone1`,\n        AVAILABILITY_ZONE_2: `${environment}AvailabilityZone2`,\n        AVAILABILITY_ZONE_3: `${environment}AvailabilityZone3`,\n        SUBNET_ID_1: `${environment}SubnetId1`,\n        SUBNET_ID_2: `${environment}SubnetId2`,\n        SUBNET_ID_3: `${environment}SubnetId3`,\n        ROUTE_TABLE_1: `${environment}RouteTable1`,\n        ROUTE_TABLE_2: `${environment}RouteTable2`,\n        ROUTE_TABLE_3: `${environment}RouteTable3`,\n        SHARED_SECURITY_GROUP_ID: `${environment}SharedSecurityGroupId`,\n        S3_KMS_KEY: `${environment}S3KmsKeyArn`,\n        S3_ACCESS_LOG_BUCKET: `${environment}S3AccessLogBucket`,\n        S3_RAW_BUCKET: `${environment}RawBucketName`,\n        S3_CONFORMED_BUCKET: `${environment}ConformedBucketName`,\n        S3_PURPOSE_BUILT_BUCKET: `${environment}PurposeBuiltBucketName`,\n        CROSS_ACCOUNT_DYNAMODB_ROLE: `${environment}CrossAccountDynamoDbRoleArn`,\n    }\n\n    return { ...cloudformation_output_mapping, ...get_local_configuration(environment) }\n}\n\nexport function get_all_configurations(): any {\n    return {\n        DEPLOYMENT: {\n            ENVIRONMENT: DEPLOYMENT,\n            GITHUB_TOKEN: '/DataLake1/GitHubToken',\n            ...get_local_configuration(DEPLOYMENT),\n        },\n        DEV: get_environment_configuration(DEV),\n        TEST: get_environment_configuration(TEST),\n        PROD: get_environment_configuration(PROD),\n    }\n}\n\nexport function get_logical_id_prefix(): any {\n    return get_local_configuration(DEPLOYMENT)[LOGICAL_ID_PREFIX]\n}\n\nexport function get_resource_name_prefix(): any {\n    return get_local_configuration(DEPLOYMENT)[RESOURCE_NAME_PREFIX]\n}\n"]}